// This file was generated by gir (https://github.com/gtk-rs/gir)
// from ../gir-files
// DO NOT EDIT

use crate::{ffi,ObjectFactory};
use glib::{prelude::*,translate::*};

glib::wrapper! {
    #[doc(alias = "AtkNoOpObjectFactory")]
    pub struct NoOpObjectFactory(Object<ffi::AtkNoOpObjectFactory, ffi::AtkNoOpObjectFactoryClass>) @extends ObjectFactory;

    match fn {
        type_ => || ffi::atk_no_op_object_factory_get_type(),
    }
}

impl NoOpObjectFactory {
        pub const NONE: Option<&'static NoOpObjectFactory> = None;
    

    #[doc(alias = "atk_no_op_object_factory_new")]
    pub fn new() -> NoOpObjectFactory {
        assert_initialized_main_thread!();
        unsafe {
            ObjectFactory::from_glib_full(ffi::atk_no_op_object_factory_new()).unsafe_cast()
        }
    }
}

impl Default for NoOpObjectFactory {
                     fn default() -> Self {
                         Self::new()
                     }
                 }
